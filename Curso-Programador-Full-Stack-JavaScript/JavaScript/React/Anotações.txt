O que é o React? 
É uma biblioteca JavaScript declarativa, eficiente e flexível a criação de interfaces de usuário(UI)

Características:
- é uma Bibliotecan não um framework
- é baseado em Components
-é usado para criar SPAs(Aplicativo de página única) - site que consiste de uma única página web com o objetivo de fornecer uma experiência do usuário similar à de um aplicativo desktop.


O que são components e porque eles são importantes
Os components permitem dividir a Interface do Usuário em partes independentes e reutilizáveis, são como funções do JS
Dois tipos de Componentes: Função e classe


O que é Jsx
Ex de JSX:
const element = <h1 className="title"> Hello world!</h1>
- JSX não é interpretado pelo browser, por este motivo devemos utilizar um transpíler(em geral o babel) para realizar essa transpilação
- Ao contrário do passado, em vez de colocar JavaScript em HTML, o JSX nos permite colocar HTML em JS

Após o transpiler o código ficara assim:
const element = React.createElement(
    "h1",
    { className: "title" },
    "Hello world!"
)
Com esse código preparamos nosso elemento para ser exibido no DOM


Como o React atualiza as views
DOM - É um objeto/interface criado pelo Browser que representa a estrututa do nosso documento HTML e que nos dá meios para interagir com ele

Virtual DOM - É uma representação em JS do DOM verdadeiro. Quando alteração e eventos acontecem, primeiro o React atualiza o Virtual DOM, analisa as mudanças e o que precisa ser atualizado no DOM, e depois realiza isso conciliando o Virtual Dom e o DOM

npx create-react-app 'nome do arquivos' - para criar um app react
npm start - faz o projeto rodar localmente no seu computador
npm build - para transpilar tudo em HTML, CSS e JS

import React, {fragment} from 'react'; -> dentro das chaves são bibliotecas sendo exportadas
O fragment serve para que aundo você não queira retornar uma div no seu component, ai você uma <fragment></fragment> em vez de div, eve ser usado pois se retornar elementos diferentes da erro

Conhecendo as preparamos
Props = Propriedades

Função pura:
Ex:
function sum(a, b) {
    return a + b;
}
- A função recebe duas propriedades a e babel
- A função não altera o valor das entradas
- Sempre retorna o mesmo resultado para os mesmos tipos de entrada

Função impura
Ex:
function withdraw(account, amount){
    account.total -= amount;
}
- A função altera o valor de sua entrada

- Todos os componentes React tem que agir como funções puras em relação ao seus props

Eventos - https://reactjs.org/docs/handling-events.html

