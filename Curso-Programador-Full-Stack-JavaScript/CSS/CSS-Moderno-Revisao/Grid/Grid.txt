display: grid; -> quando o declaramos ele procura preencher toda a tela

grid-template-columns: 25% 50% 25%(exemplo) -> define o tamanho das colunas e a quantidade. Outra unidade de medida usada são os frames(fr). Outro jeito de declararmos é usando o repeat, mas a desvantagem é que conseguiremos apenas deixar todas as colunas com o mesmo temanho. Ex: grid-template-columns: repeat (3, 1fr), são 3 linhas com o mesmo tamanho. O mesmo se aplica ao grid-template-rows

grid-auto-rows: minmax(210px, 100%) -> delimita uma altura minima e maxima da linha

gap -> igual ao flexbox

grid-column -> define em que linha(as linhas se contam verticalmente) a coluna começa e em q linha ela termina. Ex: 1/4, começa na linha 1 e vai até a 4

grid-row -> altera da mesma forma que o grid-column, só que em linhas. (as linhas se contam horizontalmente)

grid-template-areas -> usado para organizar o conteudo dentro do grid.
Ex: "item1 item2 item3"
    "item4 item4 item4"
    "item5 item5 item6"
    e depois colocando cada item em sua devida classe com grid-area

    Na questão de responsividade usamos o media-query.